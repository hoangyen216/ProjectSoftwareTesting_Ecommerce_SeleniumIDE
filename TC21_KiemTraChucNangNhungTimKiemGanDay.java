// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TC21Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tC21() {
    driver.get("https://winmart.vn//");
    driver.manage().window().setSize(new Dimension(1552, 832));
    vars.put("search1", js.executeScript("return \"sữa\""));
    vars.put("search2", js.executeScript("return \"củ cải\""));
    vars.put("search3", js.executeScript("return \"nước ngọt\""));
    vars.put("x", js.executeScript("return 1"));
    vars.put("quatity_search", js.executeScript("return 3"));
    System.out.println(vars.get("quality_search").toString());
    while ((Boolean) js.executeScript("return (arguments[0]<=3)", vars.get("x"))) {
      driver.findElement(By.name("search")).click();
      if ((Boolean) js.executeScript("return (arguments[0]==1)", vars.get("x"))) {
        driver.findElement(By.name("search")).sendKeys(vars.get("search1").toString());
      } else if ((Boolean) js.executeScript("return (arguments[0]==2)", vars.get("x"))) {
        driver.findElement(By.name("search")).sendKeys(" vars.get("search2").toString()");
      } else if ((Boolean) js.executeScript("return (arguments[0]==3)", vars.get("x"))) {
        driver.findElement(By.name("search")).sendKeys(" vars.get("search3").toString()");
      }
      driver.findElement(By.cssSelector(".vns-SEARCH")).click();
      driver.findElement(By.cssSelector(".iconClear")).click();
      vars.put("x", js.executeScript("return arguments[0]+1", vars.get("x")));
    }
    driver.findElement(By.name("search")).click();
    vars.put("item3", driver.findElement(By.cssSelector(".MuiButtonBase-root:nth-child(1) > .MuiChip-label")).getText());
    vars.put("item2", driver.findElement(By.cssSelector(".MuiButtonBase-root:nth-child(2) > .MuiChip-label")).getText());
    vars.put("item1", driver.findElement(By.cssSelector(".MuiButtonBase-root:nth-child(3) > .MuiChip-label")).getText());
    vars.put("check1", js.executeScript("return arguments[0].toUpperCase().includes(arguments[1].toUpperCase())", vars.get("search3"),vars.get("item3")));
    vars.put("check2", js.executeScript("return arguments[0].toUpperCase().includes(arguments[1].toUpperCase())", vars.get("search2"),vars.get("item2")));
    vars.put("check3", js.executeScript("return arguments[0].toUpperCase().includes(arguments[1].toUpperCase())", vars.get("search1"),vars.get("item1")));
    assertEquals(vars.get("check1").toString(), "true");
    assertEquals(vars.get("check2").toString(), "true");
    assertEquals(vars.get("check3").toString(), "true");
    vars.put("count_item_search", driver.findElements(By.xpath("//*[@id=\"layout-header\"]/div[1]/div[2]/div/div[1]/div[2]/div")).size());
    System.out.println(vars.get("count_item_search").toString());
    assertEquals(vars.get("count_item_search").toString(), "vars.get("quatity_search").toString()");
    driver.close();
  }
}
