// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TC12Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tC12() {
    driver.get("https://winmart.vn//");
    driver.manage().window().setSize(new Dimension(1552, 832));
    {
      WebElement element = driver.findElement(By.cssSelector(".top > .sub-bannersstyle__BannerLink-sc-5s36s4-2 > span > img"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".relative > .navigation-bar-item p")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".relative > .navigation-bar-item"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    vars.put("x", js.executeScript("return 2"));
    while ((Boolean) js.executeScript("return (arguments[0]<=5)", vars.get("x"))) {
      driver.findElement(By.cssSelector("li:nth-child(vars.get("x").toString()) > .MuiButtonBase-root")).click();
      vars.put("count_items", driver.findElements(By.xpath("//*[@id=\"__next\"]/div[1]/div/div[2]/div/div[2]/div")).size());
      System.out.println(vars.get("count_items").toString());
      if ((Boolean) js.executeScript("return (arguments[0]<=6)", vars.get("count_items"))) {
        vars.put("checkitems", js.executeScript("return true"));
      }
      assertEquals(vars.get("checkitems").toString(), "true");
      vars.put("x", js.executeScript("return arguments[0]+1", vars.get("x")));
    }
    driver.close();
  }
}
