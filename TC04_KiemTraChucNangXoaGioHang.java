// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TC04Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tC04() {
    driver.get("https://winmart.vn//");
    driver.manage().window().setSize(new Dimension(1872, 996));
    vars.put("item", driver.findElement(By.cssSelector(".cart-menu__Box-sc-1uxxzqy-1 > p")).getText());
    vars.put("item", js.executeScript("return parseInt(arguments[0].match(/\\((\\d+)\\)/)[1])", vars.get("item")));
    System.out.println(vars.get("item").toString());
    vars.put("x", js.executeScript("return 1"));
    if ((Boolean) js.executeScript("return (arguments[0] == 0)", vars.get("item"))) {
      System.out.println("\"Giò hàng chưa có sản phẩm\"");
    } else {
      while ((Boolean) js.executeScript("return (arguments[0] <= arguments[1])", vars.get("x"),vars.get("item"))) {
        vars.put("x", js.executeScript("return arguments[0]+1", vars.get("x")));
      }
      System.out.println(vars.get("x").toString());
      {
        WebElement element = driver.findElement(By.cssSelector(".button__StyledButton-sc-6gren8-0:nth-child(1)"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element).perform();
      }
      {
        WebElement element = driver.findElement(By.tagName("body"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element, 0, 0).perform();
      }
      {
        WebElement element = driver.findElement(By.cssSelector(".button__StyledButton-sc-6gren8-0:nth-child(1)"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element).perform();
      }
      {
        WebElement element = driver.findElement(By.tagName("body"));
        Actions builder = new Actions(driver);
        builder.moveToElement(element, 0, 0).perform();
      }
      driver.findElement(By.cssSelector(".cart-menu__Box-sc-1uxxzqy-1 > p")).click();
      driver.findElement(By.cssSelector("div:nth-child(vars.get("x").toString()) > a > div")).click();
      driver.findElement(By.cssSelector(".hLrTMn")).click();
      assertThat(driver.findElement(By.cssSelector(".cartstyle__NoProductMsg-sc-1656a4n-3")).getText(), is("Giỏ hàng chưa có sản phẩm"));
    }
    driver.close();
  }
}
